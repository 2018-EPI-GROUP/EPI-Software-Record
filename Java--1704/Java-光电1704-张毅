#《提问的智慧》读后感
    个人所认为的读后感就是读完一本书，将自己的感悟记录下来，并且结合实际将这些感悟与自己的现实境遇相结合，看看帮助到了自己的那些方面。
    刚开始看的时候被各种专有名词吓到（自己对这些都不是很了解，但又有很多因而感到害怕），认识到了自己的认知是多莫的短浅。自己也确实没有到就
是单单一个“问问题”，在这里就有这莫多的学问。这些东西也不仅仅只局限于自己在实验室能够用到，在平时的日常学习中也是能够帮助到自己的。
    下面我就简单说一说自己的收获：
    在问问题之前，自己一定要对自己所问的问题有一定的认识。
          这也就是说自己在提问前一定要做好相应的准备，所谓的准备是指这个问题自己有没有认真的思考，有没有通过一些渠道来尝试着找到自己所需的
答案，比如说：搜索互联网，在论坛上查找，又或者询问自己身边亲近的朋友等等。在你做足了这些准备之后，自己就会对这个问题有一个深刻的认识，在有了
深刻的认识之后，当自己的问题得到解答时，自己会有不一样的收获。
          结合我自己来看，有了问题之后，首先要先确认问题产生的原因，然后再逐渐深入的探索这个问题，最后自己解决的就可能不单单是这一个问题了，
很有可能这一类问题都不会再出现了。也有可能在查阅各种资料的同时，自己就会独立的把问题解决了。这也并非全无可能。相反的这些情况可能会经常发生，
因为我们都是初学者，所学内容其实都并不是很难，有相当一部分问题可能是因为自己的疏忽而产生的。比如说：1和l、；和;没分清，讲真的有的编译器对；和;
会有颜色上的区分，或者说各种其他类型的提示，但是即使是如此我们也还会忽略这些问题。像1和l，代码短的时候可能还好一点，仔细的检查还是能找出来的，
但是如果代码比较长的话，那就真的不好找了，有时会引发其他很多错误，编译器会报很多错。自己仔细想想，自己问东问西，以为是自己的代码出了问题，但
是结果却是因为自己的粗心敲错了一个字符，浪费了自己的时间，还浪费了其他人的时间。我想说的是尽量避免那些因为自己大意，而出现问题。
    学长们再给我们解答一些算法问题时，他们也就是给我们讲讲思路，其具体的代码还需要我们自己来实现。
    最后，我总结了一下，现在我们是一起学习的同学，未来我们走向社会，我们则是社会这个战场上的战友。所以希望未来的我们能够互帮互助，互相进步。
    以上就是我的感悟。
